I am Basanta Baral, a junior majoring in Computer Science at Howard University.
This project, named Quash, is a simple shell program written in C++ that mimics the behavior of common Unix shells like bash and sh. 
I worked on this project alone, and my goal was to implement core-shell functionalities such as process forking, command execution, signal handling, and input/output redirection.
The shell displays the current working directory as the prompt and supports several built-in commands including cd (to change directories), pwd (to print the current directory), echo (to display messages or environment variables), env (to display environment variables), setenv (to set environment variables), and exit (to exit the shell). 
For external commands, the shell uses fork () to create child processes and execvp() to execute the commands. 
If the command is run in the background by appending &, the shell doesnâ€™t wait for it to finish and allows other commands to be run concurrently. 
The shell also handles SIGINT (triggered by pressing Ctrl+C) to ensure that the shell doesnâ€™t terminate, but rather returns control to the prompt.
Additionally, the shell can terminate processes that run for more than 10 seconds by using a timer. 
I/O redirection is supported for both input and output, using the > and < operators, and piping is also implemented, allowing the output of one command to serve as the input for another. 
Overall, this project was aimed at creating a basic but functional shell that mimics some of the key behaviors of traditional Unix shells.
